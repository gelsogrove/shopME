{
  "name": "ShopMe WhatsApp Workflow",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-webhook",
        "options": {}
      },
      "id": "webhook-start",
      "name": "WhatsApp Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [200, 300],
      "webhookId": "whatsapp-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "api-limit-check",
              "leftValue": "={{ $json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.from }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "api-limit-check",
      "name": "Message Exists Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [400, 300]
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/channel-status/{{ $json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv' }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "channel-status-check",
      "name": "Channel Status Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [600, 300],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "channel-active",
              "leftValue": "={{ $json.isActive }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "channel-active-check",
      "name": "Channel Active?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [800, 300]
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/user-check/{{ $('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv' }}/{{ $('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.from }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "user-check",
      "name": "User Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1000, 300],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "user-registered",
              "leftValue": "={{ $json.isRegistered }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            },
            {
              "id": "not-blacklisted",
              "leftValue": "={{ $json.customer?.isBlacklisted }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "user-status-check",
      "name": "User Registered & Not Blacklisted?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1200, 300]
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/llm-router",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": {{ JSON.stringify($('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.text?.body) }},\n  \"workspaceId\": {{ JSON.stringify($('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv') }},\n  \"sessionToken\": {{ JSON.stringify($('WhatsApp Webhook').item.json.sessionToken) }}\n}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "llm-router",
      "name": "LLM Router (Intent Classification)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1400, 300],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "needs-rag",
              "leftValue": "={{ $json.needsRAG }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "rag-decision",
      "name": "Needs RAG Search?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1600, 300]
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/rag-search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": {{ JSON.stringify($('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.text?.body) }},\n  \"workspaceId\": {{ JSON.stringify($('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv') }},\n  \"businessType\": {{ JSON.stringify($('Channel Status Check').item.json.businessType) }},\n  \"customerLanguage\": {{ JSON.stringify($('User Check').item.json.customer?.language || 'en') }},\n  \"sessionToken\": {{ JSON.stringify($('WhatsApp Webhook').item.json.sessionToken) }},\n  \"customerId\": {{ JSON.stringify($('User Check').item.json.customer?.id) }}\n}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "rag-search",
      "name": "RAG Search (Data Retrieval)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1800, 200],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/agent-config/{{ $('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv' }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "agent-config",
      "name": "Get Agent Config",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1800, 400],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/llm-formatter",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"ragResults\": {{ JSON.stringify($('RAG Search (Data Retrieval)').item.json || {}) }},\n  \"query\": {{ JSON.stringify($('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.text?.body) }},\n  \"agentConfig\": {{ JSON.stringify($('Get Agent Config').item.json) }},\n  \"customerData\": {{ JSON.stringify($('User Check').item.json.customer) }},\n  \"workspaceId\": {{ JSON.stringify($('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv') }},\n  \"sessionToken\": {{ JSON.stringify($('WhatsApp Webhook').item.json.sessionToken) }}\n}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "llm-formatter",
      "name": "LLM Formatter (Response Generation)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2100, 300],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/send-whatsapp",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumber\": {{ JSON.stringify($('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.from) }},\n  \"message\": {{ JSON.stringify($('LLM Formatter (Response Generation)').item.json.response) }},\n  \"workspaceId\": {{ JSON.stringify($('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv') }}\n}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "send-whatsapp",
      "name": "Send WhatsApp Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2400, 300],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "=http://localhost:3001/api/internal/welcome-user",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumber\": {{ JSON.stringify($('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.from) }},\n  \"workspaceId\": {{ JSON.stringify($('WhatsApp Webhook').item.json.workspaceId || 'cm9hjgq9v00014qk8fsdy4ujv') }},\n  \"message\": {{ JSON.stringify($('WhatsApp Webhook').item.json.entry?.[0]?.changes?.[0]?.value?.messages?.[0]?.text?.body) }}\n}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "welcome-new-user",
      "name": "Welcome New User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1200, 500],
      "credentials": {
        "httpBasicAuth": {
          "id": "backend-auth",
          "name": "ShopMe Backend Auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// STOP WORKFLOW - NO MESSAGE DATA\nreturn {\n  status: 'stopped',\n  reason: 'No message data received',\n  action: 'no_response'\n};"
      },
      "id": "stop-no-data",
      "name": "Stop - No Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 500]
    },
    {
      "parameters": {
        "jsCode": "// STOP WORKFLOW - CHANNEL INACTIVE\nreturn {\n  status: 'stopped',\n  reason: 'Channel inactive',\n  action: 'no_response'\n};"
      },
      "id": "stop-channel-inactive",
      "name": "Stop - Channel Inactive",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 500]
    }
  ],
  "connections": {
    "WhatsApp Webhook": {
      "main": [
        [
          {
            "node": "Message Exists Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Exists Check": {
      "main": [
        [
          {
            "node": "Channel Status Check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop - No Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Status Check": {
      "main": [
        [
          {
            "node": "Channel Active?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Channel Active?": {
      "main": [
        [
          {
            "node": "User Check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop - Channel Inactive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Check": {
      "main": [
        [
          {
            "node": "User Registered & Not Blacklisted?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Registered & Not Blacklisted?": {
      "main": [
        [
          {
            "node": "LLM Router (Intent Classification)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Welcome New User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM Router (Intent Classification)": {
      "main": [
        [
          {
            "node": "Needs RAG Search?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Needs RAG Search?": {
      "main": [
        [
          {
            "node": "RAG Search (Data Retrieval)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Agent Config",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Agent Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG Search (Data Retrieval)": {
      "main": [
        [
          {
            "node": "LLM Formatter (Response Generation)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Agent Config": {
      "main": [
        [
          {
            "node": "LLM Formatter (Response Generation)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM Formatter (Response Generation)": {
      "main": [
        [
          {
            "node": "Send WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Welcome New User": {
      "main": [
        [
          {}
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-06-19T08:30:00.000Z",
  "versionId": "1"
} 