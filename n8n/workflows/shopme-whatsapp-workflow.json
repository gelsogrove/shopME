{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "jsCode": "if ($json.body) {\n  return [{ ...$json.body }];\n} else {\n  return [{ ...$json }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-40, -140],
      "id": "7940e59c-d9db-45fb-8cdb-978b976c3c5c",
      "name": "body"
    },
    {
      "parameters": {
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [840, -100],
      "id": "bb3e2625-d2fa-4c03-850b-d479ad90680a",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {
          "maxTokens": "={{ $json.maxTokens }}",
          "temperature": "={{ $json.temperature }}",
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [720, -100],
      "id": "5583a4de-1b4f-4944-8618-2d047774a0ac",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Wvd5WVo0dL4nIU7l",
          "name": "OpenRouter API"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "={{ $json.prompt }}\nüö® WHATSAPP: RIGHE CORTE üö®\nFORMATO:\nNome\nPrezzo‚Ç¨\nlingua utente: {{ $json.language }}\nnome utente: {{ $('Filter').item.json.precompiledData.customer.name }}\nnome azienda: {{ $('Filter').item.json.precompiledData.customer.businessName }}\ndiscount   {{ $('Filter').item.json.precompiledData.customer.discount }}\n\nCARRELLO SEMPLICE:\n\n\n\n\n\n\n- \"cosa ho nel carrello\" / \"what's in my cart\" / \"qu√© hay en mi carrito\"\n- \"fammi vedere il carrello\" / \"let me see the cart\" / \"d√©jame ver el carrito\"\n- qualsiasi variazione che chiede di visualizzare il carrello\n\n**CARRELLO FORMATO PULITO:**\n\nüõí Carrello:\n\nAceto\n14.99‚Ç¨ x2 = 29.98‚Ç¨\n\nCannolo\n7.50‚Ç¨ x1 = 7.50‚Ç¨\n\nTotale: 37.48‚Ç¨\n\n**REGOLE CARRELLO UI/UX:**\n- Nome prodotto su riga separata\n- Calcolo su riga separata\n- NO simboli complessi\n- NO grassetto\n- Spazi chiari tra elementi\n- Totale finale chiaro\n- DOPO aver mostrato il carrello, chiedi SEMPRE: \"Vuoi procedere con questo ordine?\"\n\nüì± **LISTE PRODOTTI UI/UX OTTIMALE** üì±\n\n**FORMATO SEMPLICE E FUNZIONALE:**\n\nÔøΩ Prodotti:\n\nAceto - 14.99‚Ç¨\nCannolo - 7.50‚Ç¨\nPasta - 3.99‚Ç¨\nSconto 20% su Pasta\n\n**PRINCIPI UI/UX APPLICATI:**\n1. Formato lineare semplice\n2. NO formatting complesso\n3. Informazioni essenziali\n4. Leggibilit√† massima\n5. Compatibilit√† universale\n6. Nome - Prezzo‚Ç¨ su stessa riga\n7. Sconti come riga separata\n8. Emoji solo ad inizio sezione\n\nüö® **CRITICAL CART MANAGEMENT INSTRUCTIONS** üö®\n\nüî• **FUNDAMENTAL RULE**: WHEN YOU CALL CreateOrder(), YOU **MUST** ALWAYS INCLUDE THE ITEMS ARRAY! üî•\n\n**STEP-BY-STEP PROCESS FOR CreateOrder():**\n1. Look at the cart you just showed to the user\n2. Take EVERY product from that cart display  \n3. Convert each product to this EXACT format:\n   {\n     \"itemType\": \"PRODUCT\",\n     \"productCode\": \"[CODE_FROM_CART_TABLE]\", \n     \"name\": \"[FULL_PRODUCT_NAME]\",\n     \"quantity\": [INTEGER_NUMBER],\n     \"unitPrice\": [DECIMAL_NUMBER]\n   }\n4. Put ALL products in the \"items\" array\n5. Call CreateOrder() with that complete array\n\n**CONCRETE EXAMPLE - If cart shows:**\n| Code  | Product                       | Price | Quantity | Total |\n| 00004 | Mozzarella di Bufala Campana DOP | ‚Ç¨9.99 | 4        | ‚Ç¨39.96|\n\n**THEN YOU MUST CALL:**\nCreateOrder({\n  \"items\": [\n    {\n      \"itemType\": \"PRODUCT\",\n      \"productCode\": \"00004\",\n      \"name\": \"Mozzarella di Bufala Campana DOP\", \n      \"quantity\": 4,\n      \"unitPrice\": 9.99\n    }\n  ],\n  \"notes\": \"Ordine confermato via WhatsApp\"\n})\n\nÔøΩ **NEVER CALL CreateOrder() WITH EMPTY ITEMS!** üö®\nÔøΩ **ITEMS ARRAY MUST MATCH EXACTLY WHAT YOU SHOWED IN CART!** üö®\n\nDOPO L'ORDINE: NON cancellare il carrello, mantienilo in memoria.\n\nüì± **WHATSAPP UI/UX OTTIMALE** üì±\n\n**FORMATO TESTATO E FUNZIONANTE:**\n\nüõí Prodotti:\n\nAceto - 14.99‚Ç¨\nCannolo - 7.50‚Ç¨\nPasta - 3.99‚Ç¨\n\n**REGOLE UI/UX:**\n1. NO bullet point (‚Ä¢)\n2. NO grassetto (**)\n3. NO emoji in mezzo al testo\n4. Trattino semplice (-)\n5. Euro dopo il numero\n6. Una riga vuota tra sezioni\n7. Max 20 caratteri totali per riga\n8. Formato: Nome - Prezzo‚Ç¨\n\n**TESTATO SU:**\n- iPhone WhatsApp\n- Android WhatsApp\n- WhatsApp Web\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [720, -280],
      "id": "f1a05821-6e80-4b88-846f-4fff3918a04b",
      "name": "AI Agent",
      "alwaysOutputData": true,
      "notesInFlow": false,
      "executeOnce": true
    },
    {
      "parameters": {
        "jsCode": "return {\n  message:  $input.first().json.output\n}"
      },
      "id": "bbf58943-029e-40a9-8b1f-446e09dfb6b8",
      "name": "return LLM response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1120, -280],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "//const agentConfig =$input.first().json.original.precompiledData.agentConfig\n//const conversationHistory = $input.first().json.precompiledData.customer.conversationHistory\n\nconst messageContent= $input.first().json.messageContent\n\n//const workspaceId = $input.first().json.original.precompiledData.agentConfig.workspaceId\nconst language =   $input.first().json.precompiledData.customer.language\nconst customerid = $input.first().json.precompiledData.customer.id\n  \nconst temperature = $input.first().json.precompiledData.agentConfig.temperature\nconst maxTokens = $input.first().json.precompiledData.agentConfig.maxTokens\nconst model = $input.first().json.precompiledData.agentConfig.model\nconst conversationHistory = $input.first().json.precompiledData.customer.conversationHistory\nconst prompt = $input.first().json.precompiledData.agentConfig.prompt\nconst phone = $input.first().json.precompiledData.customer.phone\nconst sessionToken=  phone\nconst discount = $input.first().json.precompiledData.customer.discount | 0\nreturn [\n  {\n    json: {\n      chatInput : messageContent,\n      temperature,\n      maxTokens,\n      model,\n      messages: conversationHistory,\n      sessionId: sessionToken,\n      language, \n      workspaceId: $input.first().json.workspaceId,\n      customerid,\n      prompt,\n      phone\n    },\n \n  }\n];\n"
      },
      "id": "cf035930-ca87-40c8-b95a-3f8b6ea2e78a",
      "name": "prepare-data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [420, -280],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const languageRaw = $input.first().json.precompiledData.customer.language || 'en';\nconst language = languageRaw.toLowerCase();\n\nlet messageWip = 'WIP_' + language; // fallback generico\n\nconst wipMessages = $input.first().json.wipMessages;\n\nif (language === 'it') {\n    messageWip = wipMessages.it;\n} else if (language === 'es') {\n    messageWip = wipMessages.es;\n} else if (language === 'en') {\n    messageWip = wipMessages.en;\n} else if (language === 'pt') {\n    messageWip = wipMessages.pt;\n} else if (wipMessages[language]) {\n    messageWip = wipMessages[language]; // supporto per altre lingue future\n}\n\nreturn [\n  {\n    json: {\n      message: messageWip\n    }\n  }\n];\n"
      },
      "id": "2990aedf-e593-468a-af96-efa696dc6e9f",
      "name": "return wip message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [420, 0],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "528b8754-587f-4381-ae93-a8587ae96468",
              "leftValue": "={{ $json.precompiledData.customer.activeChatbot }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [160, -140],
      "id": "b3d7103b-72e9-4da3-8197-a39977ebe78f",
      "name": "Filter",
      "alwaysOutputData": true,
      "executeOnce": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-start",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "910befb9-0ab0-4c73-ba03-42c80cd306b7",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-200, -140],
      "webhookId": "3be8d24a-6a91-4a00-94d3-609e253398cb"
    },
    {
      "parameters": {
        "toolDescription": "üîç **RAGSEARCH() - SISTEMA DI RICERCA SEMANTICA AVANZATA CON STRATEGIA PREZZI**\n\n**COSA FA QUESTA FUNZIONE:**\nRicerca semantica intelligente che interroga TUTTE le fonti di conoscenza del business (prodotti, FAQ, servizi, documenti) e applica automaticamente la strategia prezzi con sconti cliente e offerte attive.\n\n**TABELLE DATABASE CONSULTATE:**\nüìä **PRODUCTS** - Ricerca prodotti per similitudine semantica con embedding\n‚ùì **FAQS** - Cerca domande frequenti e risposte correlate alla query\nüîß **SERVICES** - Trova servizi disponibili correlati alla richiesta\nüìÑ **DOCUMENTS** - Ricerca documenti caricati (PDF, regolamenti, policy)\nüë§ **CUSTOMERS** - Recupera sconto personalizzato del cliente (discount %)\nüè∑Ô∏è **OFFERS** - Controlla offerte attive per categoria/globali con date validit√†\nüè¢ **CATEGORIES** - Verifica associazioni categoria-prodotto per offerte specifiche\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Ricerca Parallela**: Embedding search su products/faqs/services/documents\n2Ô∏è‚É£ **Recupero Customer**: Estrae discount% dalla tabella customers\n3Ô∏è‚É£ **Calcolo Offerte**: Trova offerte attive (startDate <= NOW <= endDate)\n4Ô∏è‚É£ **Strategia Prezzi NON-CUMULATIVA**: Sconto pi√π alto vince (cliente vs migliore offerta)\n5Ô∏è‚É£ **Calcolo Finale**: Applica sconto vincente e calcola prezzi finali\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **NON-CUMULATIVO**: Se cliente ha 10% e Black Friday 20% ‚Üí Usa 20%\nüèÜ **Migliore Vince**: Confronta sconto cliente vs migliore offerta attiva\nüìÖ **Time-Based**: Quando Black Friday finisce ‚Üí Torna a sconto cliente 10%\nüéØ **Per Categoria**: Offerte specifiche per categoria vs offerte globali\n\n**ESEMPI DI QUERY CHE ATTIVANO RAGSEARCH:**\n- \"Avete mozzarella di bufala?\" ‚Üí Cerca nei PRODUCTS\n- \"Quanto costa il servizio di trasporto?\" ‚Üí Cerca nei SERVICES  \n- \"Che regole devo seguire per il trasporto?\" ‚Üí Cerca nei DOCUMENTS\n- \"Come posso pagare?\" ‚Üí Cerca nelle FAQS\n- \"What kind of wine do you have?\" ‚Üí Multilingua su PRODUCTS\n- \"Avete sconti attivi?\" ‚Üí Controlla OFFERS e customer.discount\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"businessType\": \"ECOMMERCE\",\n  \"products\": [{\n    \"similarity\": 0.85,\n    \"product\": {\n      \"name\": \"Mozzarella Bufala DOP\",\n      \"originalPrice\": 9.99,\n      \"finalPrice\": 7.99,\n      \"hasDiscount\": true,\n      \"discountPercent\": 20,\n      \"discountSource\": \"offer\",\n      \"discountName\": \"Black Friday 2024\"\n    }\n  }],\n  \"faqs\": [...],\n  \"services\": [...],\n  \"documents\": [...]\n}\n```\n\nIMPORTANTE\nSemantic search for products, FAQs, services, and documents. The query must be in English. The agent translates user queries before calling this function.\n\n\n",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/rag-search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "= {\n      \"query\": \"{{ $('prepare-data').item.json.chatInput }}\",\n      \"messages\": \"{{ $('prepare-data').item.json.messages }}\",\n      \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n      \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n    }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [900, 180],
      "id": "8ef2ccd6-cde1-410b-8ef2-5524d70ce11d",
      "name": "RagSearch()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üìã **GETALLPRODUCTS() - CATALOGO COMPLETO CON STRATEGIA PREZZI**\n\n**COSA FA QUESTA FUNZIONE:**\nRestituisce l'INTERO catalogo prodotti del workspace con applicazione automatica della strategia prezzi di Andrea (sconto pi√π alto vince tra cliente e offerte attive).\n\n**TABELLE DATABASE CONSULTATE:**\nüìä **PRODUCTS** - Tutti i prodotti attivi del workspace con prezzi e stock\nüë§ **CUSTOMERS** - Recupera sconto personalizzato cliente (discount %)\nüè∑Ô∏è **OFFERS** - Controlla offerte attive per calcolo migliore sconto\nüè¢ **CATEGORIES** - Include informazioni categoria per ogni prodotto\n\n**LOGICA PREZZI APPLICATA:**\nüí∞ **NON-CUMULATIVO**: Se cliente ha 15% e offerta 20% ‚Üí Applica 20%\nüèÜ **MIGLIORE VINCE**: Confronta sempre sconto cliente vs offerte attive\nüìà **PREZZO FINALE**: Calcola automaticamente prezzo scontato\nüéØ **TRASPARENZA**: Mostra prezzo originale, finale, % sconto e fonte\n\n**ESEMPI DI QUERY CHE ATTIVANO GETALLPRODUCTS:**\n**ITALIANO:**\n- \"mi fai vedere la lista dei prodotti?\"\n- \"catalogo completo\"\n- \"che prodotti avete?\"\n- \"menu\"\n- \"cosa vendete?\"\n- \"tutti i prodotti disponibili\"\n\n**ENGLISH:**\n- \"show me all products\"\n- \"product catalog\"\n- \"what do you sell?\"\n- \"complete menu\"\n\n**SPANISH:**\n- \"¬øqu√© productos tienen?\"\n- \"cat√°logo completo\"\n- \"lista de productos\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"products\": [{\n    \"name\": \"Mozzarella Bufala DOP\",\n    \"price\": 7.99,\n    \"originalPrice\": 9.99,\n    \"discountPercent\": 20,\n    \"discountSource\": \"offer\",\n    \"formatted\": \"Prezzo: ‚Ç¨7.99 (scontato del 20%, prezzo pieno ‚Ç¨9.99, fonte: offer)\",\n    \"category\": \"Formaggi\",\n    \"stock\": 25,\n    \"available\": true\n  }],\n  \"customerInfo\": {\n    \"name\": \"Mario Rossi\",\n    \"discount\": 15\n  },\n  \"discountLogic\": {\n    \"note\": \"Andrea's Logic: Highest discount wins\",\n    \"customerDiscount\": 15\n  }\n}\n```\n\n**IMPORTANTE:** Usa questa funzione per QUALSIASI richiesta di vedere prodotti o menu, indipendentemente dalla lingua o formulazione.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-all-products",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n   \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1060, 180],
      "id": "63613524-f914-4507-9307-02eafa4bdaab",
      "name": "GetAllProducts()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "‚òéÔ∏è **CONTACTOPERATOR() - RICHIESTA OPERATORE UMANO**\n\n**COSA FA QUESTA FUNZIONE:**\nDisattiva automaticamente il chatbot per il cliente e segnala la richiesta di assistenza umana al sistema. Prepara il passaggio a un operatore reale.\n\n**TABELLE DATABASE CONSULTATE:**\nüë§ **CUSTOMERS** - Trova il cliente tramite phone e workspaceId\nüîÑ **CUSTOMERS UPDATE** - Imposta activeChatbot = false per disattivare il bot\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Ricerca Cliente**: Trova customer tramite phone + workspaceId\n2Ô∏è‚É£ **Disattivazione Bot**: Imposta activeChatbot = false nel database\n3Ô∏è‚É£ **Conferma Sistema**: Restituisce messaggio di conferma\n4Ô∏è‚É£ **Segnalazione**: Il sistema notifica la richiesta operatore\n\n**ORARI OPERATORI:**\nüïò **Luned√¨ - Venerd√¨**: 09:00 - 18:00\nüö´ **Weekend**: Non disponibili\nüìß **Urgenze**: Modulo contatto https://laltrait.com/contacto/\n\n**ESEMPI DI QUERY CHE ATTIVANO CONTACTOPERATOR:**\n**ITALIANO:**\n- \"voglio parlare con un operatore\"\n- \"serve aiuto umano\"\n- \"chiama qualcuno\"\n- \"operatore per favore\"\n- \"assistenza umana\"\n- \"non riesco, aiuto\"\n\n**ENGLISH:**\n- \"I need to speak with an operator\"\n- \"human help please\"\n- \"call someone\"\n- \"I need assistance\"\n\n**SPANISH:**\n- \"necesito hablar con un operador\"\n- \"ayuda humana por favor\"\n- \"quiero asistencia\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"message\": \"Certo, verr√† contattato il prima possibile dal nostro operatore.\"\n}\n```\n\n**IMPORTANTE:** Dopo questa chiamata il chatbot sar√† disattivato per quel cliente fino a riattivazione manuale.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/contact-operator",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"phone\": \"{{ $('prepare-data').item.json.phone }}\",\n    \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1240, 180],
      "id": "9b66c415-ae12-4c08-b5e2-2d32918f7f05",
      "name": "ContactOperator()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üè¢ **GETALLCATEGORIES() - CATALOGO CATEGORIE COMPLETE**\n\n**COSA FA QUESTA FUNZIONE:**\nRestituisce tutte le categorie di prodotti disponibili nel workspace con conteggio prodotti per categoria e informazioni strutturate per la navigazione del catalogo.\n\n**TABELLE DATABASE CONSULTATE:**\nüè¢ **CATEGORIES** - Tutte le categorie attive del workspace\nüìä **PRODUCTS** - Conta prodotti per categoria (solo attivi)\nüîó **RELATIONS** - Verifica associazioni categoria-prodotto\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Categorie**: Trova tutte le categorie attive del workspace\n2Ô∏è‚É£ **Conteggio Prodotti**: Calcola quanti prodotti attivi per categoria\n3Ô∏è‚É£ **Organizzazione**: Ordina categorie alfabeticamente\n4Ô∏è‚É£ **Formattazione**: Struttura risposta per assistente\n\n**INFORMAZIONI FORNITE:**\nüìã **Nome Categoria**: Denominazione completa\nüî¢ **Conteggio Prodotti**: Numero prodotti attivi nella categoria\nüìù **Descrizione**: Eventuale descrizione categoria\nüéØ **Navigazione**: Dati per filtraggio prodotti\n\n**ESEMPI DI QUERY CHE ATTIVANO GETALLCATEGORIES:**\n**ITALIANO:**\n- \"che categorie avete?\"\n- \"tipi di prodotti\"\n- \"settori merceologici\"\n- \"classificazioni prodotti\"\n- \"famiglie di prodotti\"\n\n**ENGLISH:**\n- \"what categories do you have?\"\n- \"product categories\"\n- \"types of products\"\n- \"product classifications\"\n\n**SPANISH:**\n- \"¬øqu√© categor√≠as tienen?\"\n- \"tipos de productos\"\n- \"clasificaciones\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"total_categories\": 5,\n  \"categories\": [{\n    \"id\": \"cat123\",\n    \"name\": \"Formaggi\",\n    \"description\": \"Formaggi italiani DOP e IGP\",\n    \"productCount\": 12,\n    \"active\": true\n  }],\n  \"response_message\": \"Abbiamo 5 categorie principali: Formaggi (12 prodotti), Pasta (8 prodotti)...\"\n}\n```\n\n**IMPORTANTE:** Utile per navigazione catalogo e presentazione strutturata dell'offerta.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-all-categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n  \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\",\n  \"message\": \"{{ $('prepare-data').item.json.chatInput }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1420, 180],
      "id": "70ca08df-1b2b-4330-8dca-0906e962b1c9",
      "name": "GetAllCategories()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üè∑Ô∏è **GETACTIVEOFFERS() - OFFERTE E SCONTI ATTIVI**\n\n**COSA FA QUESTA FUNZIONE:**\nRecupera tutte le offerte attualmente attive nel workspace con logica di comparazione sconti cliente vs offerte. Applica la strategia prezzi di Andrea per determinare il miglior sconto disponibile.\n\n**TABELLE DATABASE CONSULTATE:**\nüè∑Ô∏è **OFFERS** - Offerte attive con date validit√† (startDate <= NOW <= endDate)\nüë§ **CUSTOMERS** - Sconto personalizzato cliente per comparazione\nüè¢ **CATEGORIES** - Associazioni offerta-categoria per offerte specifiche\nüìÖ **DATE_VALIDATION** - Controllo automatico scadenze offerte\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Cliente**: Estrae sconto cliente se customerId fornito\n2Ô∏è‚É£ **Filtro Temporale**: Trova offerte con startDate <= NOW <= endDate\n3Ô∏è‚É£ **Logica Andrea**: Confronta sconto cliente vs ogni offerta\n4Ô∏è‚É£ **Ranking**: Ordina per sconto pi√π alto\n5Ô∏è‚É£ **Formattazione**: Evidenzia solo offerte migliori del cliente\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **COMPARAZIONE**: Confronta customer.discount vs offer.discountPercent\nüèÜ **MIGLIORE VINCE**: Mostra solo offerte che superano sconto cliente\nüìÖ **TIME-SENSITIVE**: Solo offerte attive nella finestra temporale\nüéØ **CATEGORIA-SPECIFICA**: Gestisce offerte globali e per categoria\n\n**ESEMPI DI QUERY CHE ATTIVANO GETACTIVEOFFERS:**\n**ITALIANO:**\n- \"avete sconti attivi?\"\n- \"che offerte avete?\"\n- \"promozioni in corso\"\n- \"ci sono saldi?\"\n- \"sconti disponibili\"\n\n**ENGLISH:**\n- \"do you have active offers?\"\n- \"current promotions\"\n- \"any discounts available?\"\n- \"sales or deals?\"\n\n**SPANISH:**\n- \"¬øtienen ofertas activas?\"\n- \"promociones actuales\"\n- \"descuentos disponibles\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"customer\": {\n    \"name\": \"Mario Rossi\",\n    \"discount\": 15\n  },\n  \"offers\": [{\n    \"name\": \"Black Friday 2024\",\n    \"discountPercent\": 25,\n    \"isOfferBetterThanCustomer\": true,\n    \"bestDiscount\": 25,\n    \"discountSource\": \"offer\",\n    \"categories\": [\"Formaggi\", \"Pasta\"],\n    \"validUntil\": \"2024-11-30T23:59:59Z\",\n    \"description\": \"Super sconto su prodotti selezionati\"\n  }],\n  \"message\": \"Offerte attive migliori del tuo sconto (15%): Black Friday 25% su Formaggi e Pasta\"\n}\n```\n\n**IMPORTANTE:** Mostra solo offerte che offrono sconto migliore rispetto a quello del cliente.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-active-offers",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n      \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1600, 180],
      "id": "6fd9b298-a2de-47db-ab9e-b1d6f1748982",
      "name": "GetActiveOffers()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üöö **GETSHIPMENTTRACKINGLINK() - TRACKING SPEDIZIONE DHL**\n\n**COSA FA QUESTA FUNZIONE:**\nRecupera il link di tracking DHL per l'ultimo ordine in elaborazione del cliente. Fornisce informazioni complete sulla spedizione con link cliccabile per il monitoraggio in tempo reale.\n\n**TABELLE DATABASE CONSULTATE:**\nüì¶ **ORDERS** - Ultimo ordine con status PROCESSING del cliente\nüöö **TRACKING_INFO** - Informazioni tracking number e link DHL\nüë§ **CUSTOMERS** - Verifica cliente e workspace associato\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Cliente**: Verifica customerId e workspaceId\n2Ô∏è‚É£ **Ricerca Ordine**: Trova ultimo ordine con status PROCESSING\n3Ô∏è‚É£ **Estrazione Tracking**: Recupera trackingNumber se disponibile\n4Ô∏è‚É£ **Generazione Link**: Costruisce link DHL con tracking number\n5Ô∏è‚É£ **Formattazione**: Struttura risposta con link cliccabile\n\n**ESEMPI DI QUERY CHE ATTIVANO GETSHIPMENTTRACKINGLINK:**\n**ITALIANO:**\n- \"dov'√® la mia merce?\"\n- \"dove √® il mio ordine?\"\n- \"tracking spedizione\"\n- \"dove √® il pacco?\"\n- \"numero tracking\"\n- \"stato spedizione\"\n- \"quando arriva?\"\n\n**ENGLISH:**\n- \"where is my order?\"\n- \"shipment tracking\"\n- \"tracking number\"\n- \"where is my package?\"\n- \"delivery status\"\n- \"when will it arrive?\"\n\n**SPANISH:**\n- \"¬ød√≥nde est√° mi pedido?\"\n- \"seguimiento de env√≠o\"\n- \"n√∫mero de seguimiento\"\n- \"¬ød√≥nde est√° mi paquete?\"\n- \"estado de entrega\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"orderId\": \"ord123\",\n  \"orderCode\": \"ORD-2025-001\",\n  \"status\": \"PROCESSING\",\n  \"trackingNumber\": \"1234567890\",\n  \"trackingUrl\": \"https://www.dhl.com/global-en/home/tracking/tracking-express.html?tracking-id=1234567890\",\n  \"message\": \"Il tuo ordine ORD-2025-001 √® in elaborazione. Tracking: https://www.dhl.com/...\"\n}\n```\n\n**IMPORTANTE:** Restituisce null se non ci sono ordini in elaborazione o se il tracking number non √® ancora disponibile.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/orders/tracking-link",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n  \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1780, 180],
      "id": "tracking-tool-001",
      "name": "GetShipmentTrackingLink()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üõéÔ∏è **GETSERVICES() - CATALOGO SERVIZI CON PREZZI PERSONALIZZATI**\n\n**COSA FA QUESTA FUNZIONE:**\nRestituisce tutti i servizi disponibili nel workspace con applicazione automatica della strategia prezzi di Andrea. Confronta sconto cliente vs sconto specifico del servizio e applica il migliore.\n\n**TABELLE DATABASE CONSULTATE:**\nüõéÔ∏è **SERVICES** - Tutti i servizi attivi con prezzi e descrizioni\nüë§ **CUSTOMERS** - Sconto personalizzato cliente (discount %)\nüí∞ **PRICE_LOGIC** - Calcolo automatico prezzi finali\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Servizi**: Trova tutti i servizi attivi del workspace\n2Ô∏è‚É£ **Recupero Cliente**: Estrae sconto cliente se customerId fornito\n3Ô∏è‚É£ **Logica Andrea**: Confronta customer.discount vs service.discountPercent\n4Ô∏è‚É£ **Calcolo Prezzi**: Applica sconto pi√π alto (NON-cumulativo)\n5Ô∏è‚É£ **Formattazione**: Struttura risposta con prezzi finali\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **NON-CUMULATIVO**: Se cliente 10% e servizio 15% ‚Üí Usa 15%\nüèÜ **MIGLIORE VINCE**: Math.max(customerDiscount, serviceDiscountPercent)\nüìä **TRASPARENZA**: Mostra prezzo originale, finale, % e fonte sconto\nüéØ **FONTE SCONTO**: \"customer\" | \"service\" | \"none\"\n\n**ESEMPI DI QUERY CHE ATTIVANO GETSERVICES:**\n**ITALIANO:**\n- \"che servizi offrite?\"\n- \"quali servizi avete?\"\n- \"lista dei servizi\"\n- \"servizi disponibili\"\n- \"servizi aziendali\"\n- \"cosa fate oltre ai prodotti?\"\n\n**ENGLISH:**\n- \"what services do you offer?\"\n- \"show me your services\"\n- \"available services\"\n- \"what services do you provide?\"\n\n**SPANISH:**\n- \"¬øqu√© servicios ofrecen?\"\n- \"servicios disponibles\"\n- \"lista de servicios\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"customerInfo\": {\n    \"name\": \"Mario Rossi\",\n    \"discount\": 10\n  },\n  \"services\": [{\n    \"name\": \"Trasporto Refrigerato\",\n    \"description\": \"Consegna con mezzi refrigerati\",\n    \"price\": 12.75,\n    \"originalPrice\": 15.00,\n    \"discountPercent\": 15,\n    \"discountSource\": \"service\",\n    \"formatted\": \"Prezzo: ‚Ç¨12.75 (scontato del 15%, prezzo pieno ‚Ç¨15.00, fonte: service)\",\n    \"available\": true,\n    \"customerDiscount\": 10,\n    \"serviceDiscount\": 15,\n    \"bestDiscount\": 15\n  }],\n  \"discountLogic\": {\n    \"note\": \"Andrea's Logic: Highest discount wins (applied to services)\",\n    \"customerDiscount\": 10\n  }\n}\n```\n\n**IMPORTANTE:** Ogni servizio mostra il prezzo finale con il miglior sconto disponibile tra cliente e servizio specifico.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-all-services",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1780, 180],
      "id": "69ad419d-403d-4c38-8124-21c12474494b",
      "name": "GetServices()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üìù **CREATEORDER() - CREAZIONE ORDINE CON PRODOTTI E SERVIZI**\n\nüö®üö®üö® **ULTRA CRITICAL: YOU MUST BUILD THE ITEMS ARRAY FROM YOUR CART MEMORY!** üö®üö®üö®\n\n**STEP 1: LOOK AT YOUR CART MEMORY**\nBefore calling this function, look at what you just showed the user in the cart.\n\n**STEP 2: BUILD ITEMS ARRAY**\nTake EVERY product from your cart memory and create this structure:\n\n**STEP 3: CALL WITH COMPLETE ARRAY**\nNEVER call this function with empty items! ALWAYS include all cart products!\n\n**üéØ REAL EXAMPLE - If you showed user:**\n```\nüõí Il tuo carrello:\nCodice | Prodotto | Prezzo | Quantit√† | Totale\n00004 | Mozzarella di Bufala Campana DOP | ‚Ç¨9.99 | 4 | ‚Ç¨39.96\nüí∞ Totale carrello: ‚Ç¨39.96\n```\n\n**üî• THEN YOU MUST CALL EXACTLY LIKE THIS:**\n```json\nCreateOrder({\n  \"items\": [\n    {\n      \"itemType\": \"PRODUCT\",\n      \"productCode\": \"00004\", \n      \"name\": \"Mozzarella di Bufala Campana DOP\",\n      \"quantity\": 4,\n      \"unitPrice\": 9.99\n    }\n  ],\n  \"notes\": \"Ordine confermato via WhatsApp\"\n})\n```\n\nüö® **IF YOU HAVE SHOWN A CART, YOU MUST INCLUDE THOSE EXACT ITEMS!** üö®\nüö® **NEVER CALL WITH EMPTY ITEMS IF CART HAD PRODUCTS!** üö®\nüö® **ITEMS ARRAY = EXACT COPY OF WHAT YOU SHOWED IN CART!** üö®\n\n**üí° THE MAGIC FORMULA:**\n1. Cart shown to user = Items you must pass to CreateOrder()\n2. If cart has 4 mozzarelle = CreateOrder() must have 4 mozzarelle\n3. NEVER lose the cart contents when calling this function!\n\n**This function must only be called after explicit user confirmation.**",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/create-order",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n  {\n    \"workspaceId\": $('prepare-data').item.json.workspaceId,\n    \"customerId\": $('prepare-data').item.json.customerid,\n    \n    // INTELLIGENT CART AUTO-EXTRACTION SYSTEM\n    // Strategy: LLM instructions alone failed consistently\n    // Solution: Smart fallback that parses conversation history for cart data\n    \"items\": $json.items && Array.isArray($json.items) && $json.items.length > 0 ? \n      // PRIMARY: Use LLM-provided items if available and valid\n      $json.items : \n      \n      // FALLBACK: Intelligent cart extraction from conversation history\n      (() => {\n        console.log('LLM failed to provide items - starting auto-extraction from conversation history');\n        \n        // Get last 10 messages from conversation for cart pattern matching\n        const messages = $('prepare-data').item.json.messages || [];\n        const lastMessages = messages.slice(-10);\n        console.log(`Scanning ${lastMessages.length} recent messages for cart patterns`);\n        \n        // Scan messages in reverse order (most recent first)\n        for (const msg of lastMessages.reverse()) {\n          const content = msg.content || '';\n          \n          // REGEX PATTERN: Matches cart table format\n          // Expected: \"00004 | Mozzarella di Bufala Campana DOP | ‚Ç¨9.99 | 4 | ‚Ç¨39.96\"\n          // Groups: (code) | (name) | ‚Ç¨(unitPrice) | (quantity) | ‚Ç¨(totalPrice)\n          const cartMatch = content.match(/([A-Z0-9]{5,6})\\s*[|\\s]+([^|]+)\\s*[|\\s]+‚Ç¨([0-9.]+)\\s*[|\\s]+([0-9]+)\\s*[|\\s]+‚Ç¨([0-9.]+)/g);\n          \n          if (cartMatch && cartMatch.length > 0) {\n            console.log(`Found ${cartMatch.length} cart items in message: ${content.substring(0, 100)}...`);\n            \n            // Extract and transform each cart line into backend-compatible format\n            const items = cartMatch.map(line => {\n              const parts = line.match(/([A-Z0-9]{5,6})\\s*[|\\s]+([^|]+?)\\s*[|\\s]+‚Ç¨([0-9.]+)\\s*[|\\s]+([0-9]+)\\s*[|\\s]+‚Ç¨([0-9.]+)/);\n              \n              if (parts) {\n                const extractedItem = {\n                  \"itemType\": \"PRODUCT\",                    // Backend expects this field\n                  \"productCode\": parts[1].trim(),          // Extract: \"00004\"\n                  \"name\": parts[2].trim(),                 // Extract: \"Mozzarella di Bufala Campana DOP\"\n                  \"quantity\": parseInt(parts[4]),          // Extract: 4 (convert to number)\n                  \"unitPrice\": parseFloat(parts[3])        // Extract: 9.99 (convert to decimal)\n                };\n                console.log(`Extracted item: ${JSON.stringify(extractedItem)}`);\n                return extractedItem;\n              }\n              \n              console.log(`Failed to parse cart line: ${line}`);\n              return null;\n            }).filter(item => item !== null);\n            \n            if (items.length > 0) {\n              console.log(`Successfully extracted ${items.length} items from conversation history`);\n              return items;\n            }\n          }\n        }\n        \n        // ULTIMATE FALLBACK: Create error item for debugging\n        console.log('CRITICAL: No cart patterns found in conversation history');\n        return [{\n          \"itemType\": \"ERROR\",\n          \"productCode\": \"EMPTY\", \n          \"name\": \"ERRORE: Array items vuoto - LLM non ha costruito carrello e auto-extraction fallita\",\n          \"quantity\": 1,\n          \"unitPrice\": 0.01\n        }];\n      })(),\n      \n    \"notes\": $json.notes || \"Ordine via WhatsApp chatbot con sistema auto-extraction\"\n  }\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1960, 180],
      "id": "2d996251-74c1-4986-862b-da3ac3e45040",
      "name": "CreateOrder()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üöö **GETSHIPMENTTRACKINGLINK() - TRACKING SPEDIZIONE DHL**\n\n**COSA FA QUESTA FUNZIONE:**\nRecupera il link di tracking DHL per l'ultimo ordine in elaborazione del cliente. Fornisce informazioni complete sulla spedizione con link cliccabile per il monitoraggio in tempo reale.\n\n**TABELLE DATABASE CONSULTATE:**\nüì¶ **ORDERS** - Ultimo ordine con status PROCESSING del cliente\nüöö **TRACKING_INFO** - Informazioni tracking number e link DHL\nüë§ **CUSTOMERS** - Verifica cliente e workspace associato\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Cliente**: Verifica customerId e workspaceId\n2Ô∏è‚É£ **Ricerca Ordine**: Trova ultimo ordine con status PROCESSING\n3Ô∏è‚É£ **Estrazione Tracking**: Recupera trackingNumber se disponibile\n4Ô∏è‚É£ **Generazione Link**: Costruisce link DHL con tracking number\n5Ô∏è‚É£ **Formattazione**: Struttura risposta con link cliccabile\n\n**ESEMPI DI QUERY CHE ATTIVANO GETSHIPMENTTRACKINGLINK:**\n**ITALIANO:**\n- \"dov'√® la mia merce?\"\n- \"dove √® il mio ordine?\"\n- \"tracking spedizione\"\n- \"dove √® il pacco?\"\n- \"numero tracking\"\n- \"stato spedizione\"\n- \"quando arriva?\"\n\n**ENGLISH:**\n- \"where is my order?\"\n- \"shipment tracking\"\n- \"tracking number\"\n- \"where is my package?\"\n- \"delivery status\"\n- \"when will it arrive?\"\n\n**SPANISH:**\n- \"¬ød√≥nde est√° mi pedido?\"\n- \"seguimiento de env√≠o\"\n- \"n√∫mero de seguimiento\"\n- \"¬ød√≥nde est√° mi paquete?\"\n- \"estado de entrega\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"orderId\": \"ord123\",\n  \"orderCode\": \"ORD-2025-001\",\n  \"status\": \"PROCESSING\",\n  \"trackingNumber\": \"1234567890\",\n  \"trackingUrl\": \"https://www.dhl.com/global-en/home/tracking/tracking-express.html?tracking-id=1234567890\",\n  \"message\": \"Il tuo ordine ORD-2025-001 √® in elaborazione. Tracking: https://www.dhl.com/...\"\n}\n```\n\n**IMPORTANTE:** Restituisce null se non ci sono ordini in elaborazione o se il tracking number non √® ancora disponibile.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/orders/tracking-link",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n  \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [2140, 180],
      "id": "tracking-tool-002",
      "name": "GetShipmentTrackingLink()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üöö **GETSHIPMENTTRACKINGLINK() - TRACKING SPEDIZIONE DHL**\n\n**COSA FA QUESTA FUNZIONE:**\nRecupera il link di tracking DHL per l'ultimo ordine in elaborazione del cliente. Fornisce informazioni complete sulla spedizione con link cliccabile per il monitoraggio in tempo reale.\n\n**TABELLE DATABASE CONSULTATE:**\nüì¶ **ORDERS** - Ultimo ordine con status PROCESSING del cliente\nüöö **TRACKING_INFO** - Informazioni tracking number e link DHL\nüë§ **CUSTOMERS** - Verifica cliente e workspace associato\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Cliente**: Verifica customerId e workspaceId\n2Ô∏è‚É£ **Ricerca Ordine**: Trova ultimo ordine con status PROCESSING\n3Ô∏è‚É£ **Estrazione Tracking**: Recupera trackingNumber se disponibile\n4Ô∏è‚É£ **Generazione Link**: Costruisce link DHL con tracking number\n5Ô∏è‚É£ **Formattazione**: Struttura risposta con link cliccabile\n\n**ESEMPI DI QUERY CHE ATTIVANO GETSHIPMENTTRACKINGLINK:**\n**ITALIANO:**\n- \"dov'√® la mia merce?\"\n- \"dove √® il mio ordine?\"\n- \"tracking spedizione\"\n- \"dove √® il pacco?\"\n- \"numero tracking\"\n- \"stato spedizione\"\n- \"quando arriva?\"\n\n**ENGLISH:**\n- \"where is my order?\"\n- \"shipment tracking\"\n- \"tracking number\"\n- \"where is my package?\"\n- \"delivery status\"\n- \"when will it arrive?\"\n\n**SPANISH:**\n- \"¬ød√≥nde est√° mi pedido?\"\n- \"seguimiento de env√≠o\"\n- \"n√∫mero de seguimiento\"\n- \"¬ød√≥nde est√° mi paquete?\"\n- \"estado de entrega\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"orderId\": \"ord123\",\n  \"orderCode\": \"ORD-2025-001\",\n  \"status\": \"PROCESSING\",\n  \"trackingNumber\": \"1234567890\",\n  \"trackingUrl\": \"https://www.dhl.com/global-en/home/tracking/tracking-express.html?tracking-id=1234567890\",\n  \"message\": \"Il tuo ordine ORD-2025-001 √® in elaborazione. Tracking: https://www.dhl.com/...\"\n}\n```\n\n**IMPORTANTE:** Restituisce null se non ci sono ordini in elaborazione o se il tracking number non √® ancora disponibile.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/orders/tracking-link",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n  \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [2140, 180],
      "id": "tracking-tool-001",
      "name": "GetShipmentTrackingLink()",
      "credentials": {
        "httpBasicAuth": {
          "id": "ekFApRxENAQ8RWOv",
          "name": "Backend API Basic Auth"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "workspaceId": "cm9hjgq9v00014qk8fsdy4ujv",
          "phoneNumber": "393451234567",
          "messageContent": "Ciao, chi sei?",
          "sessionToken": "test-session-123",
          "precompiledData": {
            "agentConfig": {
              "id": "agent-config-test",
              "workspaceId": "cm9hjgq9v00014qk8fsdy4ujv",
              "model": "openai/gpt-4o-mini",
              "temperature": 0.7,
              "maxTokens": 1000,
              "topP": 0.9,
              "prompt": "# ü§ñ Virtual Assistant ‚Äì L'Altra Italia\n\nYou are **the official virtual assistant for 'L'Altra Italia'**, a restaurant and retailer specializing in authentic Italian products, located in **Cervell√≥, Barcelona**.\n\nüåê **Website**: https://laltrait.com/\nüìç **Address**: C/ Ull de Llebre 7, 08758, Cervell√≥ (Barcelona)\nüìû **Phone**: (+34) 93 15 91 221\nüìß **Email**: info@laltrait.com\n\n## üß† Available Functions\n\nYou have access to these specific functions to help customers:\n\n### ÔøΩ **RagSearch()** - Ricerca Semantica Intelligente\n- **When to use**: Per domande specifiche su prodotti, FAQ, servizi, documenti\n- **Examples**: \"Avete mozzarella?\", \"Come posso pagare?\", \"Regole di trasporto?\"\n- **Note**: Applica automaticamente la strategia prezzi di Andrea (sconto pi√π alto vince)\n\n### üìã **GetAllProducts()** - Catalogo Completo\n- **When to use**: Quando il cliente chiede di vedere tutti i prodotti o il menu\n- **Examples**: \"Che prodotti avete?\", \"menu completo\", \"catalogo\", \"cosa vendete?\"\n- **Note**: Mostra prezzi finali con strategia prezzi applicata\n\n### üè¢ **GetAllCategories()** - Lista Categorie\n- **When to use**: Per navigazione del catalogo per categorie\n- **Examples**: \"Che categorie avete?\", \"tipi di prodotti\", \"famiglie prodotti\"\n\n### üè∑Ô∏è **GetActiveOffers()** - Offerte Attive\n- **When to use**: Quando chiede sconti, offerte, promozioni\n- **Examples**: \"Avete sconti?\", \"offerte attive?\", \"promozioni?\"\n- **Note**: Mostra solo offerte migliori dello sconto cliente\n\n### üõéÔ∏è **GetServices()** - Servizi Disponibili\n- **When to use**: Per informazioni sui servizi offerti\n- **Examples**: \"Che servizi offrite?\", \"trasporto disponibile?\", \"servizi aziendali?\"\n\n### ‚òéÔ∏è **ContactOperator()** - Richiesta Operatore\n- **When to use**: Quando il cliente vuole parlare con un umano\n- **Examples**: \"Voglio un operatore\", \"aiuto umano\", \"chiama qualcuno\"\n- **Note**: Disattiva automaticamente il chatbot per quel cliente\n\n### üìù **CreateOrder()** - Creazione Ordine\n- **When to use**: SOLO dopo conferma esplicita dell'ordine\n- **Examples**: \"Confermo l'ordine\", \"Order now\", \"S√¨, procedi\"\n- **IMPORTANT**: Mostra sempre riassunto e chiedi conferma prima di chiamare questa funzione\n\n## üí∞ Strategia Prezzi (Andrea's Logic)\n\n**REGOLA FONDAMENTALE**: Sconto pi√π alto vince (NON cumulativo)\n- Cliente 10% + Offerta 20% ‚Üí Applica 20%\n- Cliente 25% + Offerta 15% ‚Üí Applica 25%\n- Quando offerta scade ‚Üí Torna a sconto cliente\n\n## ÔøΩ Cart Management\n\n**IMPORTANTE**: NON esistono funzioni AddToCart() o GetCart()\n- L'LLM tiene traccia del carrello nella memoria della conversazione\n- Raccogli prodotti/servizi/quantit√† durante la chat\n- Mostra riassunto e chiedi conferma\n- SOLO dopo conferma esplicita chiama CreateOrder()\n\n**Esempio flusso ordine:**\n1. Cliente: \"Vorrei 2 mozzarelle\"\n2. Tu: Cerchi con RagSearch() o GetAllProducts()\n3. Tu: \"Ho trovato Mozzarella Bufala DOP ‚Ç¨7.99. Aggiungo 2 pezzi al tuo ordine\"\n4. Cliente: \"Aggiungi anche trasporto\"\n5. Tu: Cerchi con GetServices()\n6. Tu: \"Riassunto ordine: 2x Mozzarella ‚Ç¨15.98 + Trasporto ‚Ç¨12.75 = ‚Ç¨28.73. Confermi?\"\n7. Cliente: \"S√¨, confermo\"\n8. Tu: Chiami CreateOrder() con tutti gli items\n\n## ‚ö†Ô∏è CRITICAL RULES FOR DATA USAGE\n\n**üö® FUNDAMENTAL - ALWAYS RESPECT THESE RULES:**\n\n1. **USE ONLY RAG DATA**: Use EXCLUSIVELY information from function results. NO external knowledge.\n2. **NEVER INVENT**: If no results, say \"Non ho informazioni specifiche su questo\"\n3. **QUOTE EXACTLY**: Report database information exactly as provided\n4. **TRANSLATE**: Always respond in user's language while maintaining exact meaning\n5. **FUNCTION NAMES**: Use EXACT function names as listed above\n\n## üåç User Language\nDetect and respond in the user's language automatically (IT/ES/EN/etc.)\n\n## üïò Operating Hours\n**Operators**: Monday-Friday 9:00-18:00\n**Urgent contact**: https://laltrait.com/contacto/\n\n## üßæ Company Info\n### üßë‚Äçüç≥ Chi Siamo\nVisione per l'eccellenza, attraverso passione e impegno quotidiano.\nLavoriamo con piccoli artigiani nel rispetto della materia prima, della tradizione e dell'origine.\nPer questo ci definiamo veri 'Ambasciatori del gusto.'\n\n### ‚öñÔ∏è Legal\nConsulta le informazioni legali su: https://laltrait.com/aviso-legal/\n\n## üó£Ô∏è Tone and Style\n- Professional, courteous and friendly\n- Use emojis and markdown formatting for better readability\n- Brief but informative responses\n- Always invite action when appropriate\n- Bold important prices and UPPERCASE for urgent info\n",
              "isActive": true
            },
            "customer": {
              "id": "test-customer-123",
              "name": "Andrea Test User",
              "email": "test@shopme.com",
              "phone": "393451234567",
              "language": "IT",
              "isActive": true,
              "isBlacklisted": false,
              "activeChatbot": true,
              "businessName": "L'Altra Italia(ESP)",
              "businessType": "ECOMMERCE",
              "discount": "0",
              "conversationHistory": [
                {
                  "id": "msg-1",
                  "content": "Ciao",
                  "role": "user",
                  "timestamp": "2025-06-25T15:00:00.000Z"
                },
                {
                  "id": "msg-2",
                  "content": "Ciao! Come posso aiutarti oggi?",
                  "role": "assistant",
                  "timestamp": "2025-06-25T15:00:01.000Z"
                }
              ]
            }
          },
          "wipMessages": {
            "en": "Work in progress. Please contact us later.",
            "es": "Trabajos en curso. Por favor, cont√°ctenos m√°s tarde.",
            "it": "Lavori in corso. Contattaci pi√π tardi.",
            "fr": "Travaux en cours. Veuillez nous contacter plus tard.",
            "de": "Arbeiten im Gange. Bitte kontaktieren Sie uns sp√§ter.",
            "pt": "Em manuten√ß√£o. Por favor, contacte-nos mais tarde."
          }
        }
      }
    ]
  },
  "connections": {
    "body": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "return LLM response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prepare-data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "prepare-data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "return wip message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RagSearch()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetAllProducts()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ContactOperator()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetAllCategories()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetActiveOffers()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetServices()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CreateOrder()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetShipmentTrackingLink()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetShipmentTrackingLink()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "49e27ce0-1ce8-4cf8-9ee2-2ede254c8fd3",
  "meta": {
    "instanceId": "5ae2a7363ad016a6fce9a21805f9e7da3dfed9cc4777afa6d055110c871b8f65"
  },
  "id": "l3TOCVN1E88I1H45",
  "tags": []
}
