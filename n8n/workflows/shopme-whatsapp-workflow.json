{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "jsCode": "if ($json.body) {\n  return [{ ...$json.body }];\n} else {\n  return [{ ...$json }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-460, 140],
      "id": "42ec1ad6-740b-4ca4-9826-91af92a4ed7c",
      "name": "body"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [420, 180],
      "id": "bf4ec0d5-ace6-4ca8-9afb-8ad358b039cb",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {
          "maxTokens": "={{ $json.maxTokens }}",
          "temperature": "={{ $json.temperature }}",
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [300, 180],
      "id": "5d58d00e-d63a-4063-8969-ec550395c814",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "RZHQq7BU9QjaMaJp",
          "name": "OpenRouter API"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "={{ $json.prompt }}\npuoi metterci anche delle incone in mark down \nlingua utente: {{ $json.language }}\nnome utente: {{ $('Filter').item.json.precompiledData.customer.name }}\nnome azienda: {{ $('Filter').item.json.precompiledData.customer.businessName }}\ndiscount   {{ $('Filter').item.json.precompiledData.customer.discount }}\n\n\nformatta le lista mettendo bullet point e andando a capo quando e' necessario solo una volta\nusa il bold usa il corsivo quando lo reputi necessario usa i caratterei maiuscoli quando e' veramente importante, uso le icone emoticon per un tono piu simpativo ma senza esagerare\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [300, 0],
      "id": "bb8a1844-1a90-46a1-bab5-c70ccdff7dec",
      "name": "AI Agent",
      "alwaysOutputData": true,
      "notesInFlow": false,
      "executeOnce": true
    },
    {
      "parameters": {
        "jsCode": "return {\n  message:  $input.first().json.output\n}"
      },
      "id": "4f72c8e6-b7ee-43af-9199-a7ebab5ebc8d",
      "name": "return LLM response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [700, 0],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "//const agentConfig =$input.first().json.original.precompiledData.agentConfig\n//const conversationHistory = $input.first().json.precompiledData.customer.conversationHistory\n\nconst messageContent= $input.first().json.messageContent\nconst sessionToken=  $input.first().json.sessionToken\n//const workspaceId = $input.first().json.original.precompiledData.agentConfig.workspaceId\nconst language =   $input.first().json.precompiledData.customer.language\nconst customerid = $input.first().json.precompiledData.customer.id\n  \nconst temperature = $input.first().json.precompiledData.agentConfig.temperature\nconst maxTokens = $input.first().json.precompiledData.agentConfig.maxTokens\nconst model = $input.first().json.precompiledData.agentConfig.model\nconst conversationHistory = $input.first().json.precompiledData.customer.conversationHistory\nconst prompt = $input.first().json.precompiledData.agentConfig.prompt\nconst phone = $input.first().json.precompiledData.customer.phone\nconst discount = $input.first().json.precompiledData.customer.discount | 0\nreturn [\n  {\n    json: {\n      chatInput : messageContent,\n      temperature,\n      maxTokens,\n      model,\n      messages: conversationHistory,\n      sessionId: sessionToken,\n      language, \n      workspaceId: $input.first().json.workspaceId,\n      customerid,\n      prompt,\n      phone\n    },\n \n  }\n];\n"
      },
      "id": "2dd30af1-75ac-4563-b54a-4a5b5c39afdb",
      "name": "prepare-data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [0, 0],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const languageRaw = $input.first().json.precompiledData.customer.language || 'en';\nconst language = languageRaw.toLowerCase();\n\nlet messageWip = 'WIP_' + language; // fallback generico\n\nconst wipMessages = $input.first().json.wipMessages;\n\nif (language === 'it') {\n    messageWip = wipMessages.it;\n} else if (language === 'es') {\n    messageWip = wipMessages.es;\n} else if (language === 'en') {\n    messageWip = wipMessages.en;\n} else if (language === 'pt') {\n    messageWip = wipMessages.pt;\n} else if (wipMessages[language]) {\n    messageWip = wipMessages[language]; // supporto per altre lingue future\n}\n\nreturn [\n  {\n    json: {\n      message: messageWip\n    }\n  }\n];\n"
      },
      "id": "f7af54c6-c29e-40f0-ab59-259b0fbec711",
      "name": "return wip message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [0, 280],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "886f3c80-d2cc-45c4-8455-61f98540c27c",
              "leftValue": "={{ $json.precompiledData.customer.isActive }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "f5e912a0-c565-4198-9713-a3218f20208a",
              "leftValue": "={{ $json.precompiledData.customer.isBlacklisted }}",
              "rightValue": "false",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "528b8754-587f-4381-ae93-a8587ae96468",
              "leftValue": "={{ $json.precompiledData.customer.activeChatbot }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [-260, 140],
      "id": "76d817d8-4eb2-49b4-864a-8a57ed24e9ff",
      "name": "Filter",
      "alwaysOutputData": true,
      "executeOnce": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-start",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "c1927584-d3e6-4e2d-9a59-a63fa7151a42",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-620, 140],
      "webhookId": "3be8d24a-6a91-4a00-94d3-609e253398cb"
    },
    {
      "parameters": {
        "toolDescription": "üîç **RAGSEARCH() - SISTEMA DI RICERCA SEMANTICA AVANZATA CON STRATEGIA PREZZI**\n\n**COSA FA QUESTA FUNZIONE:**\nRicerca semantica intelligente che interroga TUTTE le fonti di conoscenza del business (prodotti, FAQ, servizi, documenti) e applica automaticamente la strategia prezzi con sconti cliente e offerte attive.\n\n**TABELLE DATABASE CONSULTATE:**\nüìä **PRODUCTS** - Ricerca prodotti per similitudine semantica con embedding\n‚ùì **FAQS** - Cerca domande frequenti e risposte correlate alla query\nüîß **SERVICES** - Trova servizi disponibili correlati alla richiesta\nüìÑ **DOCUMENTS** - Ricerca documenti caricati (PDF, regolamenti, policy)\nüë§ **CUSTOMERS** - Recupera sconto personalizzato del cliente (discount %)\nüè∑Ô∏è **OFFERS** - Controlla offerte attive per categoria/globali con date validit√†\nüè¢ **CATEGORIES** - Verifica associazioni categoria-prodotto per offerte specifiche\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Ricerca Parallela**: Embedding search su products/faqs/services/documents\n2Ô∏è‚É£ **Recupero Customer**: Estrae discount% dalla tabella customers\n3Ô∏è‚É£ **Calcolo Offerte**: Trova offerte attive (startDate <= NOW <= endDate)\n4Ô∏è‚É£ **Strategia Prezzi NON-CUMULATIVA**: Sconto pi√π alto vince (cliente vs migliore offerta)\n5Ô∏è‚É£ **Calcolo Finale**: Applica sconto vincente e calcola prezzi finali\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **NON-CUMULATIVO**: Se cliente ha 10% e Black Friday 20% ‚Üí Usa 20%\nüèÜ **Migliore Vince**: Confronta sconto cliente vs migliore offerta attiva\nüìÖ **Time-Based**: Quando Black Friday finisce ‚Üí Torna a sconto cliente 10%\nüéØ **Per Categoria**: Offerte specifiche per categoria vs offerte globali\n\n**ESEMPI DI QUERY CHE ATTIVANO RAGSEARCH:**\n- \"Avete mozzarella di bufala?\" ‚Üí Cerca nei PRODUCTS\n- \"Quanto costa il servizio di trasporto?\" ‚Üí Cerca nei SERVICES  \n- \"Che regole devo seguire per il trasporto?\" ‚Üí Cerca nei DOCUMENTS\n- \"Come posso pagare?\" ‚Üí Cerca nelle FAQS\n- \"What kind of wine do you have?\" ‚Üí Multilingua su PRODUCTS\n- \"Avete sconti attivi?\" ‚Üí Controlla OFFERS e customer.discount\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"businessType\": \"ECOMMERCE\",\n  \"products\": [{\n    \"similarity\": 0.85,\n    \"product\": {\n      \"name\": \"Mozzarella Bufala DOP\",\n      \"originalPrice\": 9.99,\n      \"finalPrice\": 7.99,\n      \"hasDiscount\": true,\n      \"discountPercent\": 20,\n      \"discountSource\": \"offer\",\n      \"discountName\": \"Black Friday 2024\"\n    }\n  }],\n  \"faqs\": [...],\n  \"services\": [...],\n  \"documents\": [...]\n}\n```",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/rag-search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "= {\n      \"query\": \"{{ $('prepare-data').item.json.chatInput }}\",\n      \"messages\": \"{{ $('prepare-data').item.json.messages }}\",\n      \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n      \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n    }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [580, 480],
      "id": "9194a962-fa10-4e33-95bb-e140344ba816",
      "name": "RagSearch()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üìã **GETALLPRODUCTS() - CATALOGO COMPLETO CON STRATEGIA PREZZI**\n\n**COSA FA QUESTA FUNZIONE:**\nRestituisce l'INTERO catalogo prodotti del workspace con applicazione automatica della strategia prezzi di Andrea (sconto pi√π alto vince tra cliente e offerte attive).\n\n**TABELLE DATABASE CONSULTATE:**\nüìä **PRODUCTS** - Tutti i prodotti attivi del workspace con prezzi e stock\nüë§ **CUSTOMERS** - Recupera sconto personalizzato cliente (discount %)\nüè∑Ô∏è **OFFERS** - Controlla offerte attive per calcolo migliore sconto\nüè¢ **CATEGORIES** - Include informazioni categoria per ogni prodotto\n\n**LOGICA PREZZI APPLICATA:**\nüí∞ **NON-CUMULATIVO**: Se cliente ha 15% e offerta 20% ‚Üí Applica 20%\nüèÜ **MIGLIORE VINCE**: Confronta sempre sconto cliente vs offerte attive\nüìà **PREZZO FINALE**: Calcola automaticamente prezzo scontato\nüéØ **TRASPARENZA**: Mostra prezzo originale, finale, % sconto e fonte\n\n**ESEMPI DI QUERY CHE ATTIVANO GETALLPRODUCTS:**\n**ITALIANO:**\n- \"mi fai vedere la lista dei prodotti?\"\n- \"catalogo completo\"\n- \"che prodotti avete?\"\n- \"menu\"\n- \"cosa vendete?\"\n- \"tutti i prodotti disponibili\"\n\n**ENGLISH:**\n- \"show me all products\"\n- \"product catalog\"\n- \"what do you sell?\"\n- \"complete menu\"\n\n**SPANISH:**\n- \"¬øqu√© productos tienen?\"\n- \"cat√°logo completo\"\n- \"lista de productos\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"products\": [{\n    \"name\": \"Mozzarella Bufala DOP\",\n    \"price\": 7.99,\n    \"originalPrice\": 9.99,\n    \"discountPercent\": 20,\n    \"discountSource\": \"offer\",\n    \"formatted\": \"Prezzo: ‚Ç¨7.99 (scontato del 20%, prezzo pieno ‚Ç¨9.99, fonte: offer)\",\n    \"category\": \"Formaggi\",\n    \"stock\": 25,\n    \"available\": true\n  }],\n  \"customerInfo\": {\n    \"name\": \"Mario Rossi\",\n    \"discount\": 15\n  },\n  \"discountLogic\": {\n    \"note\": \"Andrea's Logic: Highest discount wins\",\n    \"customerDiscount\": 15\n  }\n}\n```\n\n**IMPORTANTE:** Usa questa funzione per QUALSIASI richiesta di vedere prodotti o menu, indipendentemente dalla lingua o formulazione.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-all-products",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n   \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [760, 480],
      "id": "0f33aa9d-9736-4406-947b-d3af2be2ad9b",
      "name": "GetAllProducts()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "‚òéÔ∏è **CONTACTOPERATOR() - RICHIESTA OPERATORE UMANO**\n\n**COSA FA QUESTA FUNZIONE:**\nDisattiva automaticamente il chatbot per il cliente e segnala la richiesta di assistenza umana al sistema. Prepara il passaggio a un operatore reale.\n\n**TABELLE DATABASE CONSULTATE:**\nüë§ **CUSTOMERS** - Trova il cliente tramite phone e workspaceId\nüîÑ **CUSTOMERS UPDATE** - Imposta activeChatbot = false per disattivare il bot\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Ricerca Cliente**: Trova customer tramite phone + workspaceId\n2Ô∏è‚É£ **Disattivazione Bot**: Imposta activeChatbot = false nel database\n3Ô∏è‚É£ **Conferma Sistema**: Restituisce messaggio di conferma\n4Ô∏è‚É£ **Segnalazione**: Il sistema notifica la richiesta operatore\n\n**ORARI OPERATORI:**\nüïò **Luned√¨ - Venerd√¨**: 09:00 - 18:00\nüö´ **Weekend**: Non disponibili\nüìß **Urgenze**: Modulo contatto https://laltrait.com/contacto/\n\n**ESEMPI DI QUERY CHE ATTIVANO CONTACTOPERATOR:**\n**ITALIANO:**\n- \"voglio parlare con un operatore\"\n- \"serve aiuto umano\"\n- \"chiama qualcuno\"\n- \"operatore per favore\"\n- \"assistenza umana\"\n- \"non riesco, aiuto\"\n\n**ENGLISH:**\n- \"I need to speak with an operator\"\n- \"human help please\"\n- \"call someone\"\n- \"I need assistance\"\n\n**SPANISH:**\n- \"necesito hablar con un operador\"\n- \"ayuda humana por favor\"\n- \"quiero asistencia\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"message\": \"Certo, verr√† contattato il prima possibile dal nostro operatore.\"\n}\n```\n\n**IMPORTANTE:** Dopo questa chiamata il chatbot sar√† disattivato per quel cliente fino a riattivazione manuale.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/contact-operator",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"phone\": \"{{ $('prepare-data').item.json.phone }}\",\n    \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [940, 480],
      "id": "e8fcd67f-1a3d-49a6-a7b7-ca2c3dd80971",
      "name": "ContactOperator()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üè¢ **GETALLCATEGORIES() - CATALOGO CATEGORIE COMPLETE**\n\n**COSA FA QUESTA FUNZIONE:**\nRestituisce tutte le categorie di prodotti disponibili nel workspace con conteggio prodotti per categoria e informazioni strutturate per la navigazione del catalogo.\n\n**TABELLE DATABASE CONSULTATE:**\nüè¢ **CATEGORIES** - Tutte le categorie attive del workspace\nüìä **PRODUCTS** - Conta prodotti per categoria (solo attivi)\nüîó **RELATIONS** - Verifica associazioni categoria-prodotto\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Categorie**: Trova tutte le categorie attive del workspace\n2Ô∏è‚É£ **Conteggio Prodotti**: Calcola quanti prodotti attivi per categoria\n3Ô∏è‚É£ **Organizzazione**: Ordina categorie alfabeticamente\n4Ô∏è‚É£ **Formattazione**: Struttura risposta per assistente\n\n**INFORMAZIONI FORNITE:**\nüìã **Nome Categoria**: Denominazione completa\nüî¢ **Conteggio Prodotti**: Numero prodotti attivi nella categoria\nüìù **Descrizione**: Eventuale descrizione categoria\nüéØ **Navigazione**: Dati per filtraggio prodotti\n\n**ESEMPI DI QUERY CHE ATTIVANO GETALLCATEGORIES:**\n**ITALIANO:**\n- \"che categorie avete?\"\n- \"tipi di prodotti\"\n- \"settori merceologici\"\n- \"classificazioni prodotti\"\n- \"famiglie di prodotti\"\n\n**ENGLISH:**\n- \"what categories do you have?\"\n- \"product categories\"\n- \"types of products\"\n- \"product classifications\"\n\n**SPANISH:**\n- \"¬øqu√© categor√≠as tienen?\"\n- \"tipos de productos\"\n- \"clasificaciones\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"total_categories\": 5,\n  \"categories\": [{\n    \"id\": \"cat123\",\n    \"name\": \"Formaggi\",\n    \"description\": \"Formaggi italiani DOP e IGP\",\n    \"productCount\": 12,\n    \"active\": true\n  }],\n  \"response_message\": \"Abbiamo 5 categorie principali: Formaggi (12 prodotti), Pasta (8 prodotti)...\"\n}\n```\n\n**IMPORTANTE:** Utile per navigazione catalogo e presentazione strutturata dell'offerta.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-all-categories",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n  \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\",\n  \"message\": \"{{ $('prepare-data').item.json.chatInput }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1120, 480],
      "id": "923290cb-6bd5-4442-af75-1803db7ba433",
      "name": "GetAllCategories()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üè∑Ô∏è **GETACTIVEOFFERS() - OFFERTE E SCONTI ATTIVI**\n\n**COSA FA QUESTA FUNZIONE:**\nRecupera tutte le offerte attualmente attive nel workspace con logica di comparazione sconti cliente vs offerte. Applica la strategia prezzi di Andrea per determinare il miglior sconto disponibile.\n\n**TABELLE DATABASE CONSULTATE:**\nüè∑Ô∏è **OFFERS** - Offerte attive con date validit√† (startDate <= NOW <= endDate)\nüë§ **CUSTOMERS** - Sconto personalizzato cliente per comparazione\nüè¢ **CATEGORIES** - Associazioni offerta-categoria per offerte specifiche\nüìÖ **DATE_VALIDATION** - Controllo automatico scadenze offerte\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Cliente**: Estrae sconto cliente se customerId fornito\n2Ô∏è‚É£ **Filtro Temporale**: Trova offerte con startDate <= NOW <= endDate\n3Ô∏è‚É£ **Logica Andrea**: Confronta sconto cliente vs ogni offerta\n4Ô∏è‚É£ **Ranking**: Ordina per sconto pi√π alto\n5Ô∏è‚É£ **Formattazione**: Evidenzia solo offerte migliori del cliente\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **COMPARAZIONE**: Confronta customer.discount vs offer.discountPercent\nüèÜ **MIGLIORE VINCE**: Mostra solo offerte che superano sconto cliente\nüìÖ **TIME-SENSITIVE**: Solo offerte attive nella finestra temporale\nüéØ **CATEGORIA-SPECIFICA**: Gestisce offerte globali e per categoria\n\n**ESEMPI DI QUERY CHE ATTIVANO GETACTIVEOFFERS:**\n**ITALIANO:**\n- \"avete sconti attivi?\"\n- \"che offerte avete?\"\n- \"promozioni in corso\"\n- \"ci sono saldi?\"\n- \"sconti disponibili\"\n\n**ENGLISH:**\n- \"do you have active offers?\"\n- \"current promotions\"\n- \"any discounts available?\"\n- \"sales or deals?\"\n\n**SPANISH:**\n- \"¬øtienen ofertas activas?\"\n- \"promociones actuales\"\n- \"descuentos disponibles\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"customer\": {\n    \"name\": \"Mario Rossi\",\n    \"discount\": 15\n  },\n  \"offers\": [{\n    \"name\": \"Black Friday 2024\",\n    \"discountPercent\": 25,\n    \"isOfferBetterThanCustomer\": true,\n    \"bestDiscount\": 25,\n    \"discountSource\": \"offer\",\n    \"categories\": [\"Formaggi\", \"Pasta\"],\n    \"validUntil\": \"2024-11-30T23:59:59Z\",\n    \"description\": \"Super sconto su prodotti selezionati\"\n  }],\n  \"message\": \"Offerte attive migliori del tuo sconto (15%): Black Friday 25% su Formaggi e Pasta\"\n}\n```\n\n**IMPORTANTE:** Mostra solo offerte che offrono sconto migliore rispetto a quello del cliente.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-active-offers",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n      \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1280, 480],
      "id": "217d48bf-0eda-4995-b34d-af46b925bc0b",
      "name": "GetActiveOffers()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üõí **CREATEORDER() - CREAZIONE ORDINE E CHECKOUT**\n\n**COSA FA QUESTA FUNZIONE:**\nCrea un link di checkout sicuro per il cliente quando esprime intenzione di acquisto. Genera un token univoco e un URL di pagamento con tutti i prodotti/servizi richiesti e prezzi finali applicando la strategia sconti di Andrea.\n\n**TABELLE DATABASE CONSULTATE:**\nüõí **ORDERS** - Crea nuovo ordine con stato \"pending\"\nüë§ **CUSTOMERS** - Recupera dati cliente e sconto personalizzato\nüìä **PRODUCTS/SERVICES** - Valida disponibilit√† e calcola prezzi finali\nüí∞ **PRICE_CALCULATION** - Applica logica sconti (cliente vs offerte)\nüîê **CHECKOUT_TOKENS** - Genera token sicuro con scadenza\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Parsing Richiesta**: Analizza messaggio cliente per estrarre prodotti/quantit√†\n2Ô∏è‚É£ **Validazione Prodotti**: Controlla disponibilit√† e calcola prezzi\n3Ô∏è‚É£ **Applicazione Sconti**: Usa strategia Andrea (miglior sconto vince)\n4Ô∏è‚É£ **Creazione Ordine**: Salva ordine con stato \"pending\"\n5Ô∏è‚É£ **Generazione Checkout**: Crea link sicuro con token e scadenza\n6Ô∏è‚É£ **Risposta Cliente**: Fornisce link per completare pagamento\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **NON-CUMULATIVO**: Applica il miglior sconto tra cliente e offerte\nüèÜ **MIGLIORE VINCE**: customer.discount vs offers.discountPercent\nüì± **CHECKOUT SICURO**: Token temporaneo con scadenza 30 minuti\nüí≥ **PAGAMENTO**: Integrazione con gateway di pagamento\n\n**ESEMPI DI QUERY CHE ATTIVANO CREATEORDER:**\n**ITALIANO:**\n- \"vorrei ordinare 2 mozzarelle e 1 pasta\"\n- \"aggiungi al carrello\"\n- \"fammi un ordine\"\n- \"voglio comprare questo\"\n- \"procediamo al checkout\"\n- \"come posso pagare?\"\n\n**ENGLISH:**\n- \"I want to order 2 cheeses\"\n- \"add to cart\"\n- \"I'd like to buy this\"\n- \"proceed to checkout\"\n\n**SPANISH:**\n- \"quiero pedir 2 quesos\"\n- \"a√±adir al carrito\"\n- \"proceder al checkout\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"checkout_url\": \"https://laltrait.com/checkout/abc123def456\",\n  \"checkout_token\": \"abc123def456\",\n  \"expires_at\": \"2024-12-01T15:30:00Z\",\n  \"response_message\": \"üõí Perfetto! Ho preparato il tuo ordine:\\n\\nüßÄ Mozzarella Bufala DOP x2 - ‚Ç¨15.98 (sconto 20%)\\nüçù Pasta Gragnano IGP x1 - ‚Ç¨3.99\\n\\nüí∞ Totale: ‚Ç¨19.97 (risparmi ‚Ç¨4.00!)\\n\\nüîó Completa l'ordine qui: https://laltrait.com/checkout/abc123def456\\n‚è∞ Link valido per 30 minuti\"\n}\n```\n\n**IMPORTANTE:** Sempre confermare prodotti e quantit√† prima di creare il checkout. Link scade automaticamente dopo 30 minuti per sicurezza.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/create-checkout-link",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phoneNumber\": \"{{ $('prepare-data').item.json.phone }}\",\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n  \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\",\n  \"message\": \"{{ $('prepare-data').item.json.chatInput }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1660, 360],
      "id": "e0fa8b8f-0b34-4479-a832-63610a029d53",
      "name": "CreateOrder()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "üõéÔ∏è **GETSERVICES() - CATALOGO SERVIZI CON PREZZI PERSONALIZZATI**\n\n**COSA FA QUESTA FUNZIONE:**\nRestituisce tutti i servizi disponibili nel workspace con applicazione automatica della strategia prezzi di Andrea. Confronta sconto cliente vs sconto specifico del servizio e applica il migliore.\n\n**TABELLE DATABASE CONSULTATE:**\nüõéÔ∏è **SERVICES** - Tutti i servizi attivi con prezzi e descrizioni\nüë§ **CUSTOMERS** - Sconto personalizzato cliente (discount %)\nüí∞ **PRICE_LOGIC** - Calcolo automatico prezzi finali\n\n**FLUSSO DI ESECUZIONE:**\n1Ô∏è‚É£ **Recupero Servizi**: Trova tutti i servizi attivi del workspace\n2Ô∏è‚É£ **Recupero Cliente**: Estrae sconto cliente se customerId fornito\n3Ô∏è‚É£ **Logica Andrea**: Confronta customer.discount vs service.discountPercent\n4Ô∏è‚É£ **Calcolo Prezzi**: Applica sconto pi√π alto (NON-cumulativo)\n5Ô∏è‚É£ **Formattazione**: Struttura risposta con prezzi finali\n\n**STRATEGIA PREZZI (Andrea's Logic):**\nüí∞ **NON-CUMULATIVO**: Se cliente 10% e servizio 15% ‚Üí Usa 15%\nüèÜ **MIGLIORE VINCE**: Math.max(customerDiscount, serviceDiscountPercent)\nüìä **TRASPARENZA**: Mostra prezzo originale, finale, % e fonte sconto\nüéØ **FONTE SCONTO**: \"customer\" | \"service\" | \"none\"\n\n**ESEMPI DI QUERY CHE ATTIVANO GETSERVICES:**\n**ITALIANO:**\n- \"che servizi offrite?\"\n- \"quali servizi avete?\"\n- \"lista dei servizi\"\n- \"servizi disponibili\"\n- \"servizi aziendali\"\n- \"cosa fate oltre ai prodotti?\"\n\n**ENGLISH:**\n- \"what services do you offer?\"\n- \"show me your services\"\n- \"available services\"\n- \"what services do you provide?\"\n\n**SPANISH:**\n- \"¬øqu√© servicios ofrecen?\"\n- \"servicios disponibles\"\n- \"lista de servicios\"\n\n**OUTPUT STRUTTURATO:**\n```json\n{\n  \"success\": true,\n  \"customerInfo\": {\n    \"name\": \"Mario Rossi\",\n    \"discount\": 10\n  },\n  \"services\": [{\n    \"name\": \"Trasporto Refrigerato\",\n    \"description\": \"Consegna con mezzi refrigerati\",\n    \"price\": 12.75,\n    \"originalPrice\": 15.00,\n    \"discountPercent\": 15,\n    \"discountSource\": \"service\",\n    \"formatted\": \"Prezzo: ‚Ç¨12.75 (scontato del 15%, prezzo pieno ‚Ç¨15.00, fonte: service)\",\n    \"available\": true,\n    \"customerDiscount\": 10,\n    \"serviceDiscount\": 15,\n    \"bestDiscount\": 15\n  }],\n  \"discountLogic\": {\n    \"note\": \"Andrea's Logic: Highest discount wins (applied to services)\",\n    \"customerDiscount\": 10\n  }\n}\n```\n\n**IMPORTANTE:** Ogni servizio mostra il prezzo finale con il miglior sconto disponibile tra cliente e servizio specifico.",
        "method": "POST",
        "url": "=http://host.docker.internal:3001/api/internal/get-all-services",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"workspaceId\": \"{{ $('prepare-data').item.json.workspaceId }}\",\n \"customerId\": \"{{ $('prepare-data').item.json.customerid }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [1460, 460],
      "id": "a0221ba1-1f54-49e9-ab37-c58795f2887e",
      "name": "GetServices()",
      "credentials": {
        "httpBasicAuth": {
          "id": "nOzUXNg0WY5kDNmK",
          "name": "Backend API Basic Auth"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "workspaceId": "cm9hjgq9v00014qk8fsdy4ujv",
          "phoneNumber": "393451234567",
          "messageContent": "Ciao, chi sei?",
          "sessionToken": "test-session-123",
          "precompiledData": {
            "agentConfig": {
              "id": "agent-config-test",
              "workspaceId": "cm9hjgq9v00014qk8fsdy4ujv",
              "model": "openai/gpt-4o-mini",
              "temperature": 0.7,
              "maxTokens": 1000,
              "topP": 0.9,
              "prompt": "# ü§ñ Virtual Assistant ‚Äì L'Altra Italia\n\nYou are **the official virtual assistant for 'L'Altra Italia'**, a restaurant and retailer specializing in authentic Italian products, located in **Cervell√≥, Barcelona**.\n\nüåê **Website**: https://laltrait.com/\nüìç **Address**: C/ Ull de Llebre 7, 08758, Cervell√≥ (Barcelona)\nüìû **Phone**: (+34) 93 15 91 221\nüìß **Email**: info@laltrait.com\n\n## üß† Assistant Capabilities\n\nYou have access to an intelligent search engine to provide detailed information about:\n- üõí Products ‚Üí Catalog, prices, descriptions, availability\n- üõéÔ∏è Services ‚Üí Services offered with details and costs\n- ‚ùì FAQ ‚Üí Frequently asked questions and company policies\n- üìÑ Documents ‚Üí Regulations, legal and company documents\n- üè¢ Company Information ‚Üí Hours, contacts, corporate data\n\nEvery time the user asks a question in one of these areas, call the function: searchRag(query)\n\n## ‚ö†Ô∏è CRITICAL RULES FOR DATA USAGE\n\n**üö® FUNDAMENTAL - ALWAYS RESPECT THESE RULES:**\n\n1. **USE ONLY RAG DATA**: When you receive results from RAG search, use EXCLUSIVELY that information. DO NOT add external knowledge.\n\n2. **NEVER INVENT**: If RAG search returns no results, clearly say \"I don't have specific information on this topic\" instead of inventing answers.\n\n3. **QUOTE EXACTLY**: Report information from the database exactly as written, without modifying or paraphrasing.\n\n4. **ABSOLUTE PRIORITY**: RAG search data has absolute priority over any other knowledge.\n\n5. **TRANSLATE INFORMATION**: Always translate information from the database to the user's language while maintaining the exact meaning.\n\n**Correct example:**\n- User: \"How long for delivery?\"\n- RAG returns: \"24-48 hours in mainland Spain\"\n- Response: \"Orders usually arrive within 24-48 hours in mainland Spain\"\n\n**MULTILINGUAL example:**\n- User (ES): \"¬øCu√°nto tiempo para la entrega?\"\n- RAG returns: \"24-48 hours in mainland Spain\"\n- Response: \"Los pedidos suelen llegar en 24-48 horas en Espa√±a continental\"\n\n- User (IT): \"Quanto ci vuole per la consegna?\"\n- RAG returns: \"24-48 hours in mainland Spain\"\n- Response: \"Gli ordini arrivano solitamente entro 24-48 ore in Spagna continentale\"\n\n**WRONG example:**\n- Inventing: \"2-3 business days to Cervell√≥\" (if not in RAG data)\n\n## üõçÔ∏è Order Management\nIf the user wants to place an order (examples: 'I'd like to order', 'add to cart', 'make me an order'), collect order details:\n- Requested products\n- Quantities\n- Any preferences\n- Delivery data (if needed)\nThen call the function: newOrder(orderDetails)\n\n## ‚òéÔ∏è Operator Request\nIf the user says phrases like: 'I want to speak with an operator', 'need human help', 'call someone'...\nImmediately call the function: callOperator()\nOperators are available Monday to Friday, 9:00 AM to 6:00 PM.\n\n## üö® Urgent Message\nIf the user asks to send an urgent message (e.g. 'it's urgent', 'I need to contact someone immediately'), invite them to fill out the official contact form:\nUrgent form: https://laltrait.com/contacto/\nNote: Operators respond Monday to Friday, 9:00 AM to 6:00 PM.\n\n## üåç User Language\nThe assistant must automatically speak the user's language, detecting the language used in the conversation. Adapt responses to the language to ensure comprehension and user comfort.\n\n## üßæ Institutional Texts\n### üßë‚Äçüç≥ Qui√©nes somos\nVision for excellence, through passion and daily effort.\nWe work with small artisans with respect for raw materials, tradition and origin.\nFor this reason, we define ourselves as true 'Ambassadors of taste.'\n### ‚öñÔ∏è Legal Notice\nConsult the company's legal information here: https://laltrait.com/aviso-legal/\n\n## üìå Contacts\nAddress: C/ Ull de Llebre 7, 08758, Cervell√≥ (Barcelona)\nPhone: (+34) 93 15 91 221\nEmail: info@laltrait.com\nWebsite: https://laltrait.com/\n\n## üó£Ô∏è Tone and Style\n- Professional, courteous and friendly\n- Natural but competent language\n- Brief but informative responses\n- Invite action when needed (e.g. 'would you like me to help you find a product?')\n",
              "isActive": true
            },
            "customer": {
              "id": "test-customer-123",
              "name": "Andrea Test User",
              "email": "test@shopme.com",
              "phone": "393451234567",
              "language": "IT",
              "isActive": true,
              "isBlacklisted": false,
              "activeChatbot": true,
              "businessName": "L'Altra Italia(ESP)",
              "businessType": "ECOMMERCE",
              "discount": "0",
              "conversationHistory": [
                {
                  "id": "msg-1",
                  "content": "Ciao",
                  "role": "user",
                  "timestamp": "2025-06-25T15:00:00.000Z"
                },
                {
                  "id": "msg-2",
                  "content": "Ciao! Come posso aiutarti oggi?",
                  "role": "assistant",
                  "timestamp": "2025-06-25T15:00:01.000Z"
                }
              ]
            }
          },
          "wipMessages": {
            "en": "Work in progress. Please contact us later.",
            "es": "Trabajos en curso. Por favor, cont√°ctenos m√°s tarde.",
            "it": "Lavori in corso. Contattaci pi√π tardi.",
            "fr": "Travaux en cours. Veuillez nous contacter plus tard.",
            "de": "Arbeiten im Gange. Bitte kontaktieren Sie uns sp√§ter.",
            "pt": "Em manuten√ß√£o. Por favor, contacte-nos mais tarde."
          }
        }
      }
    ]
  },
  "connections": {
    "body": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "return LLM response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prepare-data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "prepare-data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "return wip message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RagSearch()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetAllProducts()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ContactOperator()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetAllCategories()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetActiveOffers()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetServices()": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d7db9897-6ab6-49c7-8ffa-bbcdeb1d0a5c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5ae2a7363ad016a6fce9a21805f9e7da3dfed9cc4777afa6d055110c871b8f65"
  },
  "id": "k4VSXZIXJDydea9j",
  "tags": []
}
