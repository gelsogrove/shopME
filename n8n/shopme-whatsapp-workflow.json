{
  "name": "Temp Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-start",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "2c70e640-d7ee-47da-995a-19861445c201",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -120,
        -20
      ],
      "webhookId": "3be8d24a-6a91-4a00-94d3-609e253398cb"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "1a179627-1c1f-4c54-af66-6ad7491f99b2",
              "leftValue": "={{ $json.isActive }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "a8bba5ed-daac-4ec1-aec4-dc8b3f9f93f0",
              "leftValue": "={{ $json.activeChatbot }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "d781db6b-2bd6-4766-a7ef-9b828b685793",
              "leftValue": "={{ $json.isBlacklisted }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        280,
        -20
      ],
      "id": "fe2a2695-0b08-4d03-ab40-68733d62edef",
      "name": "Filter",
      "alwaysOutputData": false,
      "executeOnce": true
    },
    {
      "parameters": {
        "jsCode": "return {\n  messageContent: \"Cerco mozzarella per la pizza\",\n  chatHistory: [\n    {\n      id: \"msg-1\",\n      content: \"Ciao! Come posso aiutarti oggi?\",\n      role: \"assistant\",\n      timestamp: \"2024-06-19T15:25:00.000Z\"\n    },\n    {\n      id: \"msg-2\",\n      content: \"Salve, sto cercando dei formaggi\",\n      role: \"user\",\n      timestamp: \"2024-06-19T15:26:00.000Z\"\n    }\n  ],\n  isBlacklisted: false,\n  activeChatbot: true,\n  mail: \"mario.rossi@email.com\",\n  customer: \"Mario Rossi\",\n  language: \"it\",\n  isActive: true,\n  phone: \"393451234567\",\n  email: \"mario.rossi@email.com\",\n  cusomerId: \"7a305200-993a-41d1-82c3-f1d148c3cf31\",\n  businessName: \"L'Altra Italia\",\n  prompt: \"Sei un assistente virtuale esperto per L'Altra Italia, un'azienda italiana specializzata in prodotti alimentari di alta qualità. Il tuo compito è aiutare i clienti a trovare i prodotti giusti, fornire informazioni sui prezzi, ingredienti e disponibilità. Rispondi sempre in modo professionale e cortese.\",\n  model: \"openai/gpt-4o-mini\",\n  temperature: 0.7,\n  maxTokens: 1000,\n  workspaceId: \"cm9hjgq9v00014qk8fsdy4ujv\"\n}"
      },
      "id": "a21874c1-4db1-4aad-a34f-80b64946ef21",
      "name": "mock",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        100,
        -20
      ],
      "alwaysOutputData": true,
      "executeOnce": true
    },
    {
      "parameters": {
        "jsCode": "//const item = $input.first();\n\nlet message = 'WIP MESSAGE TODO'; \n \n\nreturn [\n  {\n    json: {\n      message: message\n    }\n  }\n];"
      },
      "id": "6667ee9d-8354-41ef-ac4c-e247c9f9c215",
      "name": "return wip message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        680,
        160
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const item = $input.first().json;\n\nreturn  {\n    messageContent: item.messageContent || \"\",\n    chatHistory: item.conversationHistory || \"\",\n    isBlacklisted: item.isBlacklisted || \"\",\n    activeChatbot: item.activeChatbot || \"\",\n    mail: item.mail || \"\",\n    language: item.language || \"\",\n  /*  \n  isActive: item.customer.isActive || \"\",\n    phone: item.customer.phone || \"\",\n    email: item.customer.email || \"\",\n    cusomerId: item.customer.id || \"\",\n    businessName:  item.customer.businessName || \"\",\n    prompt :  item.agentConfig.prompt || \"\",\n    model: item.agentConfig.model || \"\",\n    temperature: item.agentConfig.temperature || \"\",\n    maxTokens: item.agentConfig.maxTokens || \"\",\n    workspaceId: item.precompiledData.agentConfig.maxTokens || \"\",\n  */\n}\n"
      },
      "id": "3dc37bd7-6988-4e25-87ad-a54b5c1fa6a4",
      "name": "go!!",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        700,
        -220
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "const item = $input.first();\n\nlet message =item.json.messageContent || \"\";\n \n\nreturn [\n  {\n    json: {\n      message: message\n    }\n  }\n];"
      },
      "id": "14568dae-8f65-40cc-9845-b877c34bbabb",
      "name": "return wip message1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        960,
        -220
      ],
      "alwaysOutputData": false
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "mock",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "go!!",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mock": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "go!!": {
      "main": [
        [
          {
            "node": "return wip message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "d943b3c0-d94c-4a9e-a23c-0d9157370a01",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5ae2a7363ad016a6fce9a21805f9e7da3dfed9cc4777afa6d055110c871b8f65"
  },
  "id": "px4cL5MEa4gsyOgW",
  "tags": []
}